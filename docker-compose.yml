version: '3.8'

services:
  # Banco para agendamento-service
  db-agendamento:
    image: postgres:16
    container_name: db-agendamento
    environment:
      POSTGRES_DB: agendamento_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_AGENDAMENTO_PORT:-5433}:5432" # EXPORTA 5433 -> 5432 INTERNO
    volumes:
      - db_agendamento_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d agendamento_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  #Serviço de agendamento de consultas
  agendamento-service:
    build:
      context: .
      dockerfile: agendamento/Dockerfile
    container_name: agendamento-service
    ports:
      - "8080:8080"
    environment:
      # Configurações do PostgreSQL - DENTRO DA REDE DOCKER usa porta INTERNA 5432
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-agendamento:5432/agendamento_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver

      # JWT
      APP_JWT_SECRET: ${JWT_SECRET}
      APP_JWT_EXPIRATION: 86400000

      # Configurações para comunicação com outros serviços
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}

      # Configurações Spring adicionais
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
    depends_on:
      db-agendamento:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - default

  # RabbitMQ (com painel web)
  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_agendamento_data: