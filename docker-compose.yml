services:
  # Banco para agendamento-service
  db-agendamento:
    image: postgres:16
    container_name: db-agendamento
    environment:
      POSTGRES_DB: agendamento_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_AGENDAMENTO_PORT:-5433}:5432"
    volumes:
      - db_agendamento_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d agendamento_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Banco para notificacao-service
  db-notificacao:
    image: postgres:16
    container_name: db-notificacao
    environment:
      POSTGRES_DB: notificacao_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_NOTIFICACAO_PORT:-5434}:5432"
    volumes:
      - db_notificacao_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d notificacao_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Banco para historico-service
  db-historico:
    image: postgres:16
    container_name: db-historico
    environment:
      POSTGRES_DB: historico_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_HISTORICO_PORT:-5435}:5432"
    volumes:
      - db_historico_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d historico_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ (com painel web)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_agendamento_data:
  db_notificacao_data:
  db_historico_data:
