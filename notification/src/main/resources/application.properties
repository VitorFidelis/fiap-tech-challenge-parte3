# Porta (padrão 8081; compose mapeia 8082:8081)
server.port=${SERVER_PORT:8081}

# Datasource (lê do compose; defaults seguros para Docker)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://db-notificacao:5432/notificacao_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${POSTGRES_USER}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${POSTGRES_PASSWORD}}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Flyway (ajuste se não usar)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true

# RabbitMQ (paramétrico; host do compose é "rabbitmq")
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:rabbitmq}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:guest}

# Fila e política de backoff
notificacoes.queue=${NOTIFICACOES_QUEUE:consultas.eventos}
notificacoes.backoff.delays=${NOTIFICACOES_BACKOFF_DELAYS:300,900,3600}
notificacoes.backoff.max-attempts=${NOTIFICACOES_BACKOFF_MAX_ATTEMPTS:5}

# JWT (necessário para o jwtTokenProvider)
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION}

# Swagger/OpenAPI (opcional)
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
